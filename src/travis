#!/bin/bash

main()
{
    setup_env

    if [ $# -gt 0 ]
    then
        local actions=($1)
        shift
    else
        local actions=( \
            "services" \
            "env" \
            "before_install" \
            "install" \
            "before_script" \
            "script" \
            "after_success" \
            "before_deploy" \
            "deploy" \
            "after_deploy" \
            "after_script" \
        )
    fi

    for action in "${actions[@]}"
    do
        execute "$action"
        local status=$?

        if [ $status -ne 0 ]
        then
            execute "after_failure"
            return $status
        fi
    done
}

setup_env()
{
    export CI=true \
        TRAVIS=true \
        CONTINUOUS_INTEGRATION=true \
        DEBIAN_FRONTEND='noninteractive' \
        RAILS_ENV=test \
        RACK_ENV=test \
        MERB_ENV=test \
        JRUBY_OPTS='--server -Dcext.enabled=false -Xcompile.invokedynamic=false'

    export TRAVIS_BRANCH=$(git rev-parse --abbrev-ref HEAD) \
        TRAVIS_BUILD_DIR=$(pwd) \
        TRAVIS_BUILD_ID=0 \
        TRAVIS_BUILD_NUMBER=0 \
        TRAVIS_COMMIT=$(git rev-parse HEAD) \
        TRAVIS_COMMIT_RANGE=$(git rev-parse HEAD~)..$(git rev-parse HEAD) \
        TRAVIS_EVENT_TYPE='cli' \
        TRAVIS_JOB_ID=0 \
        TRAVIS_OS_NAME='linux' \
        TRAVIS_PULL_REQUEST=false \
        TRAVIS_REPO_SLUG=$(git ls-remote --get-url origin | cut -d : -f 2 | sed 's/.git$//') \
        TRAVIS_SECURE_ENV_VARS=false \
        TRAVIS_TAG=$(git name-rev --tags --name-only $(git rev-parse HEAD))
}

execute()
{
    local commands=$(get "$1")
    local command

    if [ $? != 0 ]
    then
        return 0
    fi

    IFS=$'\n'
    for command in $commands
    do
        case "$1" in
            "services")
                command="sudo service $command start"
            ;;
            "env")
                command="export $command"
            ;;
        esac

        execute_command "$command"
        local status=$?

        if [ $status -ne 0 ]
        then
            return $status
        fi
    done
}

execute_command()
{
    local command="$1"

    eval $command
    local status=$?

    if [ $status -eq 0 ]
    then
        echo -en "\e[32m\e[1mâœ“\e[0m"
    else
        echo -en "\e[31m\e[1mx\e[0m"
    fi

    echo " $command"

    if [ $status -ne 0 ]
    then
        return $status
    else
        echo ""
    fi
}

get()
{
    local key=$1

    echo "$TRAVIS_CONFIG" | shyaml get-values $key 2> /dev/null
    if [ $? != 0 ]
    then
        echo "$TRAVIS_CONFIG" | shyaml get-value $key 2> /dev/null
    fi
}

die()
{
    echo $@
    exit 1
}

test -e .travis.yml || die 'No .travis.yml script'

readonly TRAVIS_CONFIG=$(cat .travis.yml)

main $@
